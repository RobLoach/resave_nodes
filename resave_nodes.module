<?php
/**
 * @file
 * Main section for the Resave Nodes module.
 *
 * This module will resave nodes of selected content types based on various
 * rules (created/updated since last time cron was run, or just all nodes
 * regardless of create/update time) at configured times (via cron or
 * multiple times of day).  This will force computed fields to be computed
 * (geolocation, media players, etc.).
 */

require_once('resave_nodes.logic.inc');

/**
 * Implements hook_help().
 */
function resave_nodes_help($path, $arg) {
  if ($path == 'admin/help#resave_nodes') {
    return t('Resave Nodes utilizes cron to periodically resave all nodes
      of a selected content type that have been created or changed since
      the prior running of cron.  This allows fields within the nodes of
      those selected content types to be recomputed (geolocation, media
      players, etc.).');
  }
}


/**
 * Implements hook_menu().
 */
function resave_nodes_menu() {
  $items['admin/config/system/resave_nodes'] = array(
    'title'            => 'Resave Nodes',
    'description'      => t('Configure the content types and frequency for resaving nodes.'),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('resave_nodes_form'),
    'access arguments' => array('administer node resaving'),
    'type'             => MENU_NORMAL_ITEM,
  );
  return $items;
}


/**
 * Implements hook_permission().
 */
function resave_nodes_permission() {
  return array(
    'administer node resaving' => array(
      'title' => t('Administer the content types and frequency for resaving nodes.'),
    ),
  );
}


/**
 * Implements hook_cron().
 */
function resave_nodes_cron() {
  resave_nodes_do_that_thing();
}


/**
 * Form builder.  Create and display the Resave Nodes config settings form.
 */
function resave_nodes_form($form, &$form_state) {
  $types = node_type_get_types();
  $content_types = array();
  foreach ($types as $type) {
    $content_types[$type->type] = $type->name;
  }

  $resave_nodes_selected_types = variable_get('resave_nodes_selected_types');
  $resave_nodes_all_nodes = variable_get('resave_nodes_all_nodes');

  $form['description'] = array(
    '#type' => 'item',
    '#description' => t('Description'),
  );

  $form['content_types'] = array(
    '#title'   => t('Content Types'),
    '#type'    => 'checkboxes',
    '#options' => $content_types,
    '#description' => t('By default, Resave Nodes is not configured to save
      anything.  You must first select which content types you would like
      periodically saved.'),
  );
  if (isset($resave_nodes_selected_types)) {
    $form['content_types']['#default_value'] = $resave_nodes_selected_types;
  }

  $form['resave_all_nodes'] = array(
    '#title'         => t('Resave All Nodes'),
    '#type'          => 'checkboxes',
    '#options'       => array(
      'resave_all_nodes' => t('Resave all nodes of the selected content types
        regardless of creation/change time.'),
    ),
    '#description' => t('By default, Resave Nodes will only resave nodes
      that have been created/changed since the last time it ran.  Selecting
      this option will cause all nodes of the selected content types to be
      resaved regardless of their creation/change times.'),
  );
  if (isset($resave_nodes_all_nodes)) {
    $form['resave_all_nodes']['#default_value'] = $resave_nodes_all_nodes;
  }

  $form['submit'] = array(
    '#type'  => 'submit',
    '#value' => 'Save Configuration',
  );

  return $form;
}


/**
 * Form builder.  Save the selected content types.
 */
function resave_nodes_form_submit($form, &$form_state) {
  variable_set('resave_nodes_selected_types', $form_state['values']['content_types']);
  variable_set('resave_nodes_all_nodes', $form_state['values']['resave_all_nodes']);

  drupal_set_message(t('The configuration has been saved.'));

  $config['content_types']         = $form_state['values']['content_types'];
  $config['resave_all_nodes']      = $form_state['values']['resave_all_nodes'];
  $config['resave_nodes_last_run'] = variable_get('resave_nodes_last_run');

  watchdog(
    'resave_nodes',
    'Configuration has been updated: <pre>@config</pre>',
    array(
      '@config'  => print_r($config, TRUE),
    ),
    WATCHDOG_INFO
  );
}
